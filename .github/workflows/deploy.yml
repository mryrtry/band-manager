name: CI / CD — Build → Test → Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch: { }

env:
  REMOTE_HOST: se.ifmo.ru
  REMOTE_PORT: 2222
  REMOTE_USER: s409483
  REMOTE_DIR: $HOME/BandManager
  REMOTE_JAR: $HOME/BandManager/BandManager.jar
  REMOTE_LOG: $HOME/BandManager/band-manager.log
  JAR_NAME: BandManager-0.1.jar

jobs:
  build:
    name: Build (Maven package)
    runs-on: ubuntu-latest
    outputs:
      jar-path: ${{ steps.upload.outputs.artifact-name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Build project
        run: mvn -B clean package -DskipTests

      - name: Upload built jar as artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: bandmanager-jar
          path: target/${{ env.JAR_NAME }}

  test:
    name: Run tests (Maven)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Download built jar (for reference)
        uses: actions/download-artifact@v4
        with:
          name: bandmanager-jar
          path: ./artifact

      - name: Run tests only (no rebuild)
        run: mvn -B test

  deploy:
    name: Deploy to se.ifmo.ru
    runs-on: ubuntu-latest
    needs: [ build, test ]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download built jar
        uses: actions/download-artifact@v4
        with:
          name: bandmanager-jar
          path: ./artifact

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Ensure directory exists & stop old app
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ env.REMOTE_PORT }}
          script: |
            set -e
            mkdir -p ${REMOTE_DIR}
            PID=$(pgrep -f "${REMOTE_JAR}" || true)
            if [ -n "$PID" ]; then
              kill $PID || true
              sleep 3
              if ps -p $PID > /dev/null 2>&1; then
                echo "SIGKILL для $PID..."
                kill -9 $PID || true
              fi
            else
            fi

      - name: Copy jar to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ env.REMOTE_PORT }}
          source: ./artifact/${{ env.JAR_NAME }}
          target: ${{ env.REMOTE_JAR }}

      - name: Start app on server (nohup)
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ env.REMOTE_PORT }}
          script: |
            set -e
            cd ${REMOTE_DIR}
            nohup java -jar ${REMOTE_JAR} --spring.profiles.active=prod > ${REMOTE_LOG} 2>&1 &
            sleep 5
            pgrep -f "${REMOTE_JAR}" || (echo "Ошибка: процесс не запущен!" && exit 1)
